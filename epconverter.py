#!/usr/bin/env python
# -*- coding: utf-8 -*- 

""" 
Takes all E-Prime raw data files in the script directory and
converts them to csv files.

Pro tip: The script can be used for batch processing on Linux using the following command:
    find ROOT_SEARCH_DIRECTORY -iname "*.txt" -printf "%f\n" -exec python LOCATION_OF_SCRIPT {} \;

Author: Gunnar Norrman (gunnar.norrman@biling.su.se)
"""

import sys
import os
import csv
import glob

def epconverter(src):
    """Converts the txt file automatically generated by the E-Prime experiment and
    converts it into a csv file.
    
    Input: Name of the source txt file
    Output: A csv file with the same name and location as the source file
    """

    # Declare some list variables
    raw = []
    data = []
    start_points = []
    end_points = []
    levels = []
    columns = []


    # Import raw data by row and add to a new list
    with open(src, 'r') as source:
        for line in source.readlines():
            line_values = line.replace('\00', '').strip() # remove hidden characters
            raw.append(line_values) 

    # Parse the imported data
    for i, line in enumerate(raw):

        # Find max level in experiment
        if 'Level:' in line:
            levels.extend(line.split(': ')[1])

        # Get start point of each trial
        if '*** LogFrame Start ***' in line:
            start_points.extend([i])

        # Get end point of each trial
        if '*** LogFrame End ***' in line:
            end_points.extend([i])

    # Create new list of pairwise start and end values
    indices = [(s+1, e-1,) for s, e in zip(start_points, end_points)]

    # Make each trial into a dictionary
    for i, row in enumerate(indices):

        newrow = [val.split(': ') for val in raw[row[0]:row[1]]]

        newvals = {val[0]:val[1] if len(val) >= 2 else '' for val in newrow}

        if levels[i] == max(levels):
            data.append(newvals)
            columns = columns + [val[0] for val in newrow if val[0] not in columns]

        elif levels[i] == min(levels): # top level, session data
            session_data = newvals
            session_columns = [val[0] for val in newrow if val[0] not in columns]


    # Export data as csv

    name, ext = os.path.splitext(file)

    with open(name + '.csv', 'w') as fp:
        a = csv.writer(fp, delimiter=',')

        # Write column headers
        a.writerow(columns + session_columns)

        # Write each row to file
        for trial in data:
            newrow = [trial[val] if val in trial.keys() else '' for val in columns]
            newrow = newrow + [session_data[key] for key in session_columns]
            a.writerow(newrow)


if __name__ == "__main__":

    if len(sys.argv) > 1:
        arg = sys.argv[1]
    else:
        sys.exit('No arguments supplied.')

    if os.path.isfile(arg):
        files = [arg]
    elif os.path.isdir(arg):
        files = glob.glob(''.join([files, '*.txt']))
    else:
        sys.exit('Please select a file or a directory.')

    for file in files:
        epconverter(file)
